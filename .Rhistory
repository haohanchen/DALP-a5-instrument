cont_list[["Russia"]] %>% filter(dist > 0.000001) %>% top_n(closest, -dist) %>% rbind(., cont_list[["Russia"]] %>% filter(dist < 0.000001))
closest = 2
cont_list[["Russia"]] %>% filter(dist > 0.000001) %>% top_n(closest, -dist) %>% rbind(., cont_list[["Russia"]] %>% filter(dist < 0.000001))
cont_list[["Russia"]] %>% filter(dist > 0.000001) %>% top_n(closest, -dist) %>% bind_rows(cont_list[["Russia"]] %>% filter(dist < 0.000001))
cont_list[["Russia"]] %>% filter(dist < 0.000001) %>% nrow()
cont_list[["Russia"]] %>% filter(dist < 0.000001) %>% nrow() >= closest
i = 20
cont_list[[20]]
n_strict_contiguous = cont_list[[i]] %>% filter(dist < 0.000001) %>% nrow()
n_strict_cont = cont_list[[i]] %>% filter(dist < 0.000001) %>% nrow()
n_strict_cont
n_strict_cont >= closest
cont_list[[i]]
i = 30
cont_list[[20]]
i = 30
cont_list[[i]]
n_strict_cont = cont_list[[i]] %>% filter(dist < 0.000001) %>% nrow()
n_strict_cont
for (i in length(cont_list)){
n_strict_cont = cont_list[[i]] %>% filter(dist < 0.000001) %>% nrow()
tmp[[i]] <- ifelse(
n_strict_cont >= closest,
cont_list[[i]],
cont_list[[i]] %>% filter(dist > 0.000001) %>% top_n(closest - n_strict_cont, -dist) %>%
bind_rows(cont_list[[i]] %>% filter(dist < 0.000001)) # the contiguous countries
)
}
tmp <- list()
for (i in length(cont_list)){
n_strict_cont = cont_list[[i]] %>% filter(dist < 0.000001) %>% nrow()
tmp[[i]] <- ifelse(
n_strict_cont >= closest,
cont_list[[i]],
cont_list[[i]] %>% filter(dist > 0.000001) %>% top_n(closest - n_strict_cont, -dist) %>%
bind_rows(cont_list[[i]] %>% filter(dist < 0.000001)) # the contiguous countries
)
}
tmp
cont_list[[i]]
cont_list
closest
tmp
i = 1
n_strict_cont = cont_list[[i]] %>% filter(dist < 0.000001) %>% nrow()
n_strict_cont
cont_list[[i]]
tmp[[i]] <- ifelse(
n_strict_cont >= closest,
cont_list[[i]],
cont_list[[i]] %>% filter(dist > 0.000001) %>% top_n(closest - n_strict_cont, -dist) %>%
bind_rows(cont_list[[i]] %>% filter(dist < 0.000001)) # the contiguous countries
)
tmp[[i]]
cont_list[[i]]
ifelse(
n_strict_cont >= closest,
cont_list[[i]],
cont_list[[i]] %>% filter(dist > 0.000001) %>% top_n(closest - n_strict_cont, -dist) %>%
bind_rows(cont_list[[i]] %>% filter(dist < 0.000001)) # the contiguous countries
)
cont_list[[i]]
if (n_strict_cont >= closest){
tmp[[i]] <- cont_list[[i]]
} else{
tmp[[i]] <- cont_list[[i]] %>% filter(dist > 0.000001) %>% top_n(closest - n_strict_cont, -dist) %>%
bind_rows(cont_list[[i]] %>% filter(dist < 0.000001)) # the contiguous countries
}
tmp[[i]]
tmp[[i]]
for (i in length(cont_list)){
n_strict_cont = cont_list[[i]] %>% filter(dist < 0.000001) %>% nrow()
if (n_strict_cont >= closest){
tmp[[i]] <- cont_list[[i]]
} else{
tmp[[i]] <- cont_list[[i]] %>% filter(dist > 0.000001) %>% top_n(closest - n_strict_cont, -dist) %>%
bind_rows(cont_list[[i]] %>% filter(dist < 0.000001)) # the contiguous countries
}
}
tmp
tmp <- list()
i = 1
i = 1
n_strict_cont = cont_list[[i]] %>% filter(dist < 0.000001) %>% nrow()
if (n_strict_cont >= closest){
tmp[[i]] <- cont_list[[i]]
} else{
tmp[[i]] <- cont_list[[i]] %>% filter(dist > 0.000001) %>% top_n(closest - n_strict_cont, -dist) %>%
bind_rows(cont_list[[i]] %>% filter(dist < 0.000001)) # the contiguous countries
}
tmp[[i]]
for (i in length(cont_list)){
n_strict_cont = cont_list[[i]] %>% filter(dist < 0.000001) %>% nrow()
if (n_strict_cont >= closest){
tmp[[i]] <- cont_list[[i]]
} else{
tmp[[i]] <- cont_list[[i]] %>% filter(dist > 0.000001) %>% top_n(closest - n_strict_cont, -dist) %>%
bind_rows(cont_list[[i]] %>% filter(dist < 0.000001)) # the contiguous countries
}
tmp[[i]]
}
for (i in length(cont_list)){
n_strict_cont = cont_list[[i]] %>% filter(dist < 0.000001) %>% nrow()
if (n_strict_cont >= closest){
tmp[[i]] <- cont_list[[i]]
} else{
tmp[[i]] <- cont_list[[i]] %>% filter(dist > 0.000001) %>% top_n(closest - n_strict_cont, -dist) %>%
bind_rows(cont_list[[i]] %>% filter(dist < 0.000001)) # the contiguous countries
}
print(tmp[[i]])
}
for (i in 1:length(cont_list)){
n_strict_cont = cont_list[[i]] %>% filter(dist < 0.000001) %>% nrow()
if (n_strict_cont >= closest){
tmp[[i]] <- cont_list[[i]]
} else{
tmp[[i]] <- cont_list[[i]] %>% filter(dist > 0.000001) %>% top_n(closest - n_strict_cont, -dist) %>%
bind_rows(cont_list[[i]] %>% filter(dist < 0.000001)) # the contiguous countries
}
}
tmp
for (i in 1:length(cont_list)){
n_strict_cont = cont_list[[i]] %>% filter(dist < 0.000001) %>% nrow()
if (n_strict_cont >= closest){
tmp[[i]] <- cont_list[[i]] %>% filter(dist < 0.000001) %>% nrow()
} else{
tmp[[i]] <- cont_list[[i]] %>% filter(dist > 0.000001) %>% top_n(closest - n_strict_cont, -dist) %>%
bind_rows(cont_list[[i]] %>% filter(dist < 0.000001)) # the contiguous countries
}
}
tmp
names(tmp) <- names(cont_list)
tmp
for (i in 1:length(cont_list)){
n_strict_cont = cont_list[[i]] %>% filter(dist < 0.000001) %>% nrow()
if (n_strict_cont >= closest){
tmp[[i]] <- cont_list[[i]] %>% filter(dist < 0.000001)
} else{
tmp[[i]] <- cont_list[[i]] %>% filter(dist > 0.000001) %>% top_n(closest - n_strict_cont, -dist) %>%
bind_rows(cont_list[[i]] %>% filter(dist < 0.000001)) # the contiguous countries
}
}
names(tmp) <- names(cont_list)
tmp
get_instrument <- function(cont_list, threshold, w_p31 = F, w_dist = F, closest = NULL){
if (!is.null(closest) & threshold > 0){
i = 30
cont_list[[i]]
sapply(cont_list, function(x) nrow(x))
tmp <- list()
i = 1
for (i in 1:length(cont_list)){
n_strict_cont = cont_list[[i]] %>% filter(dist == 0) %>% nrow()
if (n_strict_cont >= closest){
tmp[[i]] <- cont_list[[i]] %>% filter(dist == 0)
} else{
tmp[[i]] <- cont_list[[i]] %>% filter(dist == 0) %>% top_n(closest - n_strict_cont, -dist) %>%
bind_rows(cont_list[[i]] %>% filter(dist == 0)) # the contiguous countries
}
}
names(tmp) <- names(cont_list)
cont_list <- tmp
}
instrument <- rep(NA, length(cont_list))
for (i in 1:length(cont_list)){
if (nrow(cont_list[[i]]) > 0){
if (w_dist == F & w_p31 == F){
instrument[i] <- party %>% select(country, a5, p31) %>% filter(country %in% cont_list[[i]]$country) %>% group_by(country) %>%
summarise(a5c = mean(a5, na.rm = T)) %>%
summarise(a5_ins = mean(a5c, na.rm = T)) %>% as.numeric
} else if (w_dist == F & w_p31 == T){
instrument[i] <- party %>% select(country, a5, p31) %>% filter(country %in% cont_list[[i]]$country) %>% group_by(country) %>%
summarise(a5c = weighted.mean(a5, p31, na.rm = T)) %>%
summarise(a5_ins = mean(a5c, na.rm = T)) %>% as.numeric
} else if (w_dist == T & w_p31 == F){
instrument[i] <- party %>% select(country, a5, p31) %>% filter(country %in% cont_list[[i]]$country) %>% group_by(country) %>%
summarise(a5c = mean(a5, na.rm = T)) %>%
summarise(a5_ins = weighted.mean(a5c, threshold - cont_list[[i]]$dist, na.rm = T)) %>% as.numeric
} else if (w_dist == T & w_p31 == T){
instrument[i] <- party %>% select(country, a5, p31) %>% filter(country %in% cont_list[[i]]$country) %>% group_by(country) %>%
summarise(a5c = weighted.mean(a5, p31, na.rm = T)) %>%
summarise(a5_ins = weighted.mean(a5c, max(cont_list[[i]]$dist) - cont_list[[i]]$dist + 0.1, na.rm = T)) %>% as.numeric
}
} else{
instrument[i] <- NA
}
}
names(instrument) <- names(cont_list)
return(instrument)
}
get_instrument <- function(cont_list, threshold, w_p31 = F, w_dist = F, closest_n = NULL){
if (!is.null(closest_n) & threshold > 0){
i = 30
cont_list[[i]]
sapply(cont_list, function(x) nrow(x))
tmp <- list()
i = 1
for (i in 1:length(cont_list)){
n_strict_cont = cont_list[[i]] %>% filter(dist == 0) %>% nrow()
if (n_strict_cont >= closest){
tmp[[i]] <- cont_list[[i]] %>% filter(dist == 0)
} else{
tmp[[i]] <- cont_list[[i]] %>% filter(dist == 0) %>% top_n(closest_n - n_strict_cont, -dist) %>%
bind_rows(cont_list[[i]] %>% filter(dist == 0)) # the contiguous countries
}
}
names(tmp) <- names(cont_list)
cont_list <- tmp
}
instrument <- rep(NA, length(cont_list))
for (i in 1:length(cont_list)){
if (nrow(cont_list[[i]]) > 0){
if (w_dist == F & w_p31 == F){
instrument[i] <- party %>% select(country, a5, p31) %>% filter(country %in% cont_list[[i]]$country) %>% group_by(country) %>%
summarise(a5c = mean(a5, na.rm = T)) %>%
summarise(a5_ins = mean(a5c, na.rm = T)) %>% as.numeric
} else if (w_dist == F & w_p31 == T){
instrument[i] <- party %>% select(country, a5, p31) %>% filter(country %in% cont_list[[i]]$country) %>% group_by(country) %>%
summarise(a5c = weighted.mean(a5, p31, na.rm = T)) %>%
summarise(a5_ins = mean(a5c, na.rm = T)) %>% as.numeric
} else if (w_dist == T & w_p31 == F){
instrument[i] <- party %>% select(country, a5, p31) %>% filter(country %in% cont_list[[i]]$country) %>% group_by(country) %>%
summarise(a5c = mean(a5, na.rm = T)) %>%
summarise(a5_ins = weighted.mean(a5c, threshold - cont_list[[i]]$dist, na.rm = T)) %>% as.numeric
} else if (w_dist == T & w_p31 == T){
instrument[i] <- party %>% select(country, a5, p31) %>% filter(country %in% cont_list[[i]]$country) %>% group_by(country) %>%
summarise(a5c = weighted.mean(a5, p31, na.rm = T)) %>%
summarise(a5_ins = weighted.mean(a5c, max(cont_list[[i]]$dist) - cont_list[[i]]$dist + 0.1, na.rm = T)) %>% as.numeric
}
} else{
instrument[i] <- NA
}
}
names(instrument) <- names(cont_list)
return(instrument)
}
country4
rm(list=ls())
# Load libraries
####################
library(dplyr)
library(ggplot2)
# Load DALP data
#####################
party <- read.csv("raw-data/DALP_party.csv", encoding = "latin1")
country2 <- read.csv("raw-data/DALP_country2.csv")
dalp <- merge(party, country2, by = "ccode")
# Load contituity dataset
# http://www.correlatesofwar.org/data-sets/direct-contiguity
#############################################################
run <- F
if (run){
library(cshapes)
dist <- cshapes::distmatrix(type = "mindist", date = as.Date("2009/1/1"))
save(dist, file = "raw-data/distance.Rdata")
}
# distance in kilometers
load("raw-data/distance.Rdata")
# Check match of countries
country2[!country2$ccodecow %in% colnames(dist), c("country", "ccodecow")]
# Germany and Serbia not matched. Check with the COW codebook
ccodeCOW <- read.csv("raw-data/COW country codes.csv")
ccodeCOW[ccodeCOW$StateAbb %in% c("GFR", "GDR", "GMY", "YUG"),]
c(255, 260, 265, 345) %in% colnames(dist)
# Recode the Germany one... weird
colnames(dist)[colnames(dist) == "260"] <- "255"
rownames(dist)[rownames(dist) == "260"] <- "255"
# A final list of ccodewb (Serbia removed)
v_ccodecow <- as.character(country2$ccodecow)
v_ccodecow <- v_ccodecow[v_ccodecow != "345"]
# Subset the contiguity matrix
dist_s <- as.data.frame(dist[v_ccodecow, v_ccodecow])
View(dist_s)
dist_s[dist_s < 10e-8]
# Set some extremely small numbers to 0
dist_s[dist_s < 10e-8] <- 0
dist_s$ccodecow <- row.names(dist_s)
country3 <- merge(country2, dist_s, by = "ccodecow")
country3 <- country3[, c("ccodecow", "ccodewb", "country", as.character(country3$ccodecow))]
names(country3)[-3:-1] <- as.character(country3$ccodewb)
country4 <- country3[,-1]
for (i in 1:nrow(country4)){
for (j in 1:ncol(country4)){
if (i == j - 2){
country4[i, j] <- NA
}
}
}
country4
dist_s[dist_s < 10e-8]
View(dist_s)
dist_s[dist_s < 10e-8]
dist_s < 10e-8
dist_s < 10e-8 & dist_s > 0
dist_s[dist_s < 10e-8 & dist_s > 0]
# Subset the contiguity matrix
dist_s <- as.data.frame(dist[v_ccodecow, v_ccodecow])
View(dist_s)
dist_s[dist_s < 10e-8 & dist_s > 0]
# Set some extremely small numbers to 0
dist_s[dist_s < 10e-8 & dist_s > 0] <- 0
dist_s[dist_s < 10e-8 & dist_s > 0]
dist_s$ccodecow <- row.names(dist_s)
country3 <- merge(country2, dist_s, by = "ccodecow")
country3 <- country3[, c("ccodecow", "ccodewb", "country", as.character(country3$ccodecow))]
names(country3)[-3:-1] <- as.character(country3$ccodewb)
country4 <- country3[,-1]
for (i in 1:nrow(country4)){
for (j in 1:ncol(country4)){
if (i == j - 2){
country4[i, j] <- NA
}
}
}
country4
write.csv(country4, "result/cont-matrix.csv", na = "", row.names = F)
get_contiguous <- function(threshold = 0, fname = NULL, return_ls = F){
n_country <- c()
name_country <- list()
name_country_out <- c()
for (i in 1:nrow(country4)){
n_country[i] <- sum(country4[i, -c(1, 2, i + 2)] <= threshold)
name_country[[as.character(country4$country[i])]] <-
data.frame(country = as.character(country4$country[which(country4[i, -c(1, 2)] <= threshold)]),
dist = as.numeric(country4[i, which(country4[i, -c(1, 2)] <= threshold)+2]))
name_country_out[as.character(country4$country[i])] <- paste(as.character(country4$country[which(country4[i, -c(1, 2)] == 0)]), collapse = "; ")
}
if (!is.null(fname)){
write.csv(plyr::ldply(name_country, rbind), fname, na = "")
}
if (return_ls){
return(name_country)
}
}
get_instrument <- function(cont_list, threshold, w_p31 = F, w_dist = F, closest_n = NULL){
if (!is.null(closest_n) & threshold > 0){
i = 30
cont_list[[i]]
sapply(cont_list, function(x) nrow(x))
tmp <- list()
i = 1
for (i in 1:length(cont_list)){
n_strict_cont = cont_list[[i]] %>% filter(dist == 0) %>% nrow()
if (n_strict_cont >= closest){
tmp[[i]] <- cont_list[[i]] %>% filter(dist == 0)
} else{
tmp[[i]] <- cont_list[[i]] %>% filter(dist == 0) %>% top_n(closest_n - n_strict_cont, -dist) %>%
bind_rows(cont_list[[i]] %>% filter(dist == 0)) # the contiguous countries
}
}
names(tmp) <- names(cont_list)
cont_list <- tmp
}
instrument <- rep(NA, length(cont_list))
for (i in 1:length(cont_list)){
if (nrow(cont_list[[i]]) > 0){
if (w_dist == F & w_p31 == F){
instrument[i] <- party %>% select(country, a5, p31) %>% filter(country %in% cont_list[[i]]$country) %>% group_by(country) %>%
summarise(a5c = mean(a5, na.rm = T)) %>%
summarise(a5_ins = mean(a5c, na.rm = T)) %>% as.numeric
} else if (w_dist == F & w_p31 == T){
instrument[i] <- party %>% select(country, a5, p31) %>% filter(country %in% cont_list[[i]]$country) %>% group_by(country) %>%
summarise(a5c = weighted.mean(a5, p31, na.rm = T)) %>%
summarise(a5_ins = mean(a5c, na.rm = T)) %>% as.numeric
} else if (w_dist == T & w_p31 == F){
instrument[i] <- party %>% select(country, a5, p31) %>% filter(country %in% cont_list[[i]]$country) %>% group_by(country) %>%
summarise(a5c = mean(a5, na.rm = T)) %>%
summarise(a5_ins = weighted.mean(a5c, threshold - cont_list[[i]]$dist, na.rm = T)) %>% as.numeric
} else if (w_dist == T & w_p31 == T){
instrument[i] <- party %>% select(country, a5, p31) %>% filter(country %in% cont_list[[i]]$country) %>% group_by(country) %>%
summarise(a5c = weighted.mean(a5, p31, na.rm = T)) %>%
summarise(a5_ins = weighted.mean(a5c, max(cont_list[[i]]$dist) - cont_list[[i]]$dist + 0.1, na.rm = T)) %>% as.numeric
}
} else{
instrument[i] <- NA
}
}
names(instrument) <- names(cont_list)
return(instrument)
}
get_tab_instrument <- function(threshold){
cont_list <- get_contiguous(threshold = threshold, return_ls = T)
out <- cbind.data.frame(
country = names(cont_list),
`a5 IV unweighted` = get_instrument(cont_list, threshold = threshold, w_dist = F, w_p31 = F),
`a5 IV weighted by p31` = get_instrument(cont_list, threshold = threshold, w_dist = F, w_p31 = T),
`a5 IV weighted by distance` = get_instrument(cont_list, threshold = threshold, w_dist = T, w_p31 = F),
`a5 IV weighted by distance and p31` = get_instrument(cont_list, threshold = threshold, w_dist = T, w_p31 = T))
names(out)[-1] <- paste0(names(out)[-1], "(threshold ", threshold, ")")
row.names(out) <- NULL
out
}
cont_list <- get_contiguous(threshold = 100, return_ls = T)
# Output
############
tab_instr_0 <- get_tab_instrument(threshold = 0)
length(which(is.na(tab_instr_0$`a5 IV unweighted(threshold 0)`)))
tab_instr_0 <- get_tab_instrument(threshold = 0.000001)
names(tab_instr_0)
length(which(is.na(tab_instr_0$`a5 IV unweighted(threshold 1e-06)`)))
length(which(is.na(tab_instr_0$`a5 IV unweighted(threshold 0)`)))
# Output
############
tab_instr_0 <- get_tab_instrument(threshold = 0)
length(which(is.na(tab_instr_0$`a5 IV unweighted(threshold 0)`)))
tab_instr_50 <- get_tab_instrument(threshold = 50)
tab_instr_100 <- get_tab_instrument(threshold = 100)
# Print list of contiguous countries using different thresholds
get_contiguous(threshold = 0, fname = "result/contiguity_0.csv")
get_instrument <- function(cont_list, threshold, w_p31 = F, w_dist = F, closest_n = NULL){
if (!is.null(closest_n) & threshold > 0){
tmp <- list()
for (i in 1:length(cont_list)){
n_strict_cont = cont_list[[i]] %>% filter(dist == 0) %>% nrow()
if (n_strict_cont >= closest){
tmp[[i]] <- cont_list[[i]] %>% filter(dist == 0)
} else{
tmp[[i]] <- cont_list[[i]] %>% filter(dist == 0) %>% top_n(closest_n - n_strict_cont, -dist) %>%
bind_rows(cont_list[[i]] %>% filter(dist == 0)) # the contiguous countries
}
}
names(tmp) <- names(cont_list)
cont_list <- tmp
}
instrument <- rep(NA, length(cont_list))
for (i in 1:length(cont_list)){
if (nrow(cont_list[[i]]) > 0){
if (w_dist == F & w_p31 == F){
instrument[i] <- party %>% select(country, a5, p31) %>% filter(country %in% cont_list[[i]]$country) %>% group_by(country) %>%
summarise(a5c = mean(a5, na.rm = T)) %>%
summarise(a5_ins = mean(a5c, na.rm = T)) %>% as.numeric
} else if (w_dist == F & w_p31 == T){
instrument[i] <- party %>% select(country, a5, p31) %>% filter(country %in% cont_list[[i]]$country) %>% group_by(country) %>%
summarise(a5c = weighted.mean(a5, p31, na.rm = T)) %>%
summarise(a5_ins = mean(a5c, na.rm = T)) %>% as.numeric
} else if (w_dist == T & w_p31 == F){
instrument[i] <- party %>% select(country, a5, p31) %>% filter(country %in% cont_list[[i]]$country) %>% group_by(country) %>%
summarise(a5c = mean(a5, na.rm = T)) %>%
summarise(a5_ins = weighted.mean(a5c, threshold - cont_list[[i]]$dist, na.rm = T)) %>% as.numeric
} else if (w_dist == T & w_p31 == T){
instrument[i] <- party %>% select(country, a5, p31) %>% filter(country %in% cont_list[[i]]$country) %>% group_by(country) %>%
summarise(a5c = weighted.mean(a5, p31, na.rm = T)) %>%
summarise(a5_ins = weighted.mean(a5c, max(cont_list[[i]]$dist) - cont_list[[i]]$dist + 0.1, na.rm = T)) %>% as.numeric
}
} else{
instrument[i] <- NA
}
}
names(instrument) <- names(cont_list)
return(instrument)
}
get_tab_instrument <- function(threshold, closest_n = NULL){
cont_list <- get_contiguous(threshold = threshold, return_ls = T)
out <- cbind.data.frame(
country = names(cont_list),
`a5 IV unweighted` = get_instrument(cont_list, threshold = threshold, w_dist = F, w_p31 = F, closest_n = closest_n),
`a5 IV weighted by p31` = get_instrument(cont_list, threshold = threshold, w_dist = F, w_p31 = T, closest_n = closest_n),
`a5 IV weighted by distance` = get_instrument(cont_list, threshold = threshold, w_dist = T, w_p31 = F, closest_n = closest_n),
`a5 IV weighted by distance and p31` = get_instrument(cont_list, threshold = threshold, w_dist = T, w_p31 = T, closest_n = closest_n))
names(out)[-1] <- paste0(names(out)[-1], "(threshold ", threshold, ")")
row.names(out) <- NULL
out
}
# Print list of contiguous countries using different thresholds
get_contiguous(threshold = 0, fname = "result/contiguity_0.csv")
get_contiguous(threshold = 50, fname = "result/contiguity_50.csv")
get_contiguous(threshold = 100, fname = "result/contiguity_100.csv")
tab_instr_0_x2 <- get_tab_instrument(threshold = 0, closest_n = 2)
tab_instr_50_x2 <- get_tab_instrument(threshold = 50, closest_n = 2)
get_instrument <- function(cont_list, threshold, w_p31 = F, w_dist = F, closest_n = NULL){
if (!is.null(closest_n) & threshold > 0){
tmp <- list()
for (i in 1:length(cont_list)){
n_strict_cont = cont_list[[i]] %>% filter(dist == 0) %>% nrow()
if (n_strict_cont >= closest_n){
tmp[[i]] <- cont_list[[i]] %>% filter(dist == 0)
} else{
tmp[[i]] <- cont_list[[i]] %>% filter(dist == 0) %>% top_n(closest_n - n_strict_cont, -dist) %>%
bind_rows(cont_list[[i]] %>% filter(dist == 0)) # the contiguous countries
}
}
names(tmp) <- names(cont_list)
cont_list <- tmp
}
instrument <- rep(NA, length(cont_list))
for (i in 1:length(cont_list)){
if (nrow(cont_list[[i]]) > 0){
if (w_dist == F & w_p31 == F){
instrument[i] <- party %>% select(country, a5, p31) %>% filter(country %in% cont_list[[i]]$country) %>% group_by(country) %>%
summarise(a5c = mean(a5, na.rm = T)) %>%
summarise(a5_ins = mean(a5c, na.rm = T)) %>% as.numeric
} else if (w_dist == F & w_p31 == T){
instrument[i] <- party %>% select(country, a5, p31) %>% filter(country %in% cont_list[[i]]$country) %>% group_by(country) %>%
summarise(a5c = weighted.mean(a5, p31, na.rm = T)) %>%
summarise(a5_ins = mean(a5c, na.rm = T)) %>% as.numeric
} else if (w_dist == T & w_p31 == F){
instrument[i] <- party %>% select(country, a5, p31) %>% filter(country %in% cont_list[[i]]$country) %>% group_by(country) %>%
summarise(a5c = mean(a5, na.rm = T)) %>%
summarise(a5_ins = weighted.mean(a5c, threshold - cont_list[[i]]$dist, na.rm = T)) %>% as.numeric
} else if (w_dist == T & w_p31 == T){
instrument[i] <- party %>% select(country, a5, p31) %>% filter(country %in% cont_list[[i]]$country) %>% group_by(country) %>%
summarise(a5c = weighted.mean(a5, p31, na.rm = T)) %>%
summarise(a5_ins = weighted.mean(a5c, max(cont_list[[i]]$dist) - cont_list[[i]]$dist + 0.1, na.rm = T)) %>% as.numeric
}
} else{
instrument[i] <- NA
}
}
names(instrument) <- names(cont_list)
return(instrument)
}
tab_instr_50_x2 <- get_tab_instrument(threshold = 50, closest_n = 2)

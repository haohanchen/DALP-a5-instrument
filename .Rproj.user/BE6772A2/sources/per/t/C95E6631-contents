library(RSQLite)
library(dplyr)

rm(list=ls())
# Connect to SQL dataset ------------------------
Sys.setlocale("LC_ALL","Chinese")

# Establish connection to SQLite database
con = dbConnect(drv = SQLite(), dbname = "data/zhihu_19551424.sqlite")

# Describe data ----------------
Describe_data = F
if (Describe_data){
  dbListTables(con)
  
  # Tags: 15665 unique tags
  dbListFields(con, "Topic")
  dbGetQuery(con, "SELECT count(*) FROM Topic")
  
  # Question: 101532 questions. 5805700 following edges. 45141 comments
  dbListFields(con, "Question")
  dbListFields(con, "Question_Follower")
  dbListFields(con, "Question_Comment")
  
  # Answer: 511137 answers. 2023317 comments. 9741557 votes
  dbListFields(con, "Answer")
  dbListFields(con, "Answer_Comment")
  dbListFields(con, "Answer_User_Vote")
  
  # User: 1834387 users
  dbListFields(con, "User")
}

# Load data ----------------
answer = dbReadTable(con, "Answer")
answer_user_vote = dbReadTable(con, "Answer_User_Vote")

# Recover upvote number (because what's in the answer dataset is just a raw count)
num_upvote = answer_user_vote %>% group_by(answer_id) %>% summarise(upvote = n()) %>% as.data.frame
answer = answer %>% select(-upvote) %>% merge(., num_upvote, by.x = "id", by.y = "answer_id", all.x = T)
answer$upvote[is.na(answer$upvote)] <- 0

# Create time variable (for subset). Subset 2015? Don't see much improvement in outcome var
answer$time_created[1]
answer_time = as.POSIXct(answer$time_created, origin = "1970-01-01")
summary(answer_time)
print(answer_time[1]); cat(answer_time[1])
date_time_range = as.POSIXct(c("2015-01-01 0:00", "2016-01-01 0:00"), origin = "1970-01-01")
answer_s_15 = which(answer$time_created >= date_time_range[1] & answer$time_created < date_time_range[2])

# Subset 2015 dataset (answer) -----------------
ans_s1 = answer[answer_s_15,]

# Subset answers that have valid content by length ------------------
ans_nchar <- nchar(ans_s1$answer_text)
hist(ans_nchar)
summary(ans_nchar)
# 80 to 99 percentile !!
# Why -- see the plot. good exponential distribution
ans_nchar_q <- quantile(ans_nchar, c(0.80, 0.99))

ans_s2 <- ans_s1[ans_nchar >= ans_nchar_q[1] & ans_nchar <= ans_nchar_q[2],]

hist(nchar(ans_s2$answer_text))
summary(nchar(ans_s2$answer_text))
ans_s2$answer_text[19000]
sum(is.na(ans_s2$user_id))

# Finalize the subset of answers ----------------------
answer_s <- ans_s2
save(answer_s, file = "data/cleaned/answer_s.Rdata")